# Definição do Deployment para o Apache Zookeeper
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment  # Nome do Deployment
  labels:
    app: zookeeper  # Label para seleção
spec:
  replicas: 1  # Número de réplicas desejadas
  selector:
    matchLabels:
      app: zookeeper  # Label para seleção dos pods
  template:
    metadata:
      labels:
        app: zookeeper  # Label para seleção dos pods
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.3.0  # Imagem Docker utilizada
          ports:
            - containerPort: 2181  # Porta exposta para comunicação do Zookeeper
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"  # Variável de ambiente para configurar a porta do cliente
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"  # Variável de ambiente para configurar o tempo do tick

---
# Definição do Service para o Apache Zookeeper
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service  # Nome do Service
spec:
  selector:
    app: zookeeper  # Seleciona pods com a label 'app: zookeeper'
  ports:
    - protocol: TCP
      port: 2181  # Porta do Service
      targetPort: 2181  # Porta dos pods de destino

---
# Definição do Deployment para o Apache Kafka
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-deployment  # Nome do Deployment
  labels:
    app: kafka  # Label para seleção
spec:
  replicas: 1  # Número de réplicas desejadas
  selector:
    matchLabels:
      app: kafka  # Label para seleção dos pods
  template:
    metadata:
      labels:
        app: kafka  # Label para seleção dos pods
    spec:
      containers:
        - name: broker
          image: confluentinc/cp-kafka:7.3.0  # Imagem Docker utilizada
          ports:
            - containerPort: 9092  # Porta exposta para comunicação do Kafka
          env:
            - name: KAFKA_BROKER_ID
              value: "1"  # Identificação única do broker
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper-service:2181'  # Endereço do Zookeeper
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://:29092,PLAINTEXT_INTERNAL://kafka-service:9092
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
---
# Definição do Service para o Apache Kafka
apiVersion: v1
kind: Service
metadata:
  name: kafka-service  # Nome do Service
spec:
  selector:
    app: kafka  # Seleciona pods com a label 'app: kafka'
  ports:
    - protocol: TCP
      port: 9092  # Porta do Service
      targetPort: 9092  # Porta dos pods de destino

---
# Definição do Deployment para o Confluent Control Center
apiVersion: apps/v1
kind: Deployment
metadata:
  name: control-center  # Nome do Deployment
spec:
  selector:
    matchLabels:
      app: control-center  # Label para seleção dos pods
  template:
    metadata:
      labels:
        app: control-center  # Label para seleção dos pods
    spec:
      containers:
        - name: control-center
          image: confluentinc/cp-enterprise-control-center:7.3.0  # Imagem Docker utilizada
          ports:
            - containerPort: 9021  # Porta exposta para comunicação do Control Center
          env:
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: kafka-service:9092  # Endereço do servidor Kafka
            - name: CONTROL_CENTER_REPLICATION_FACTOR
              value: "1"
            - name: PORT
              value: "9021"
---
# Definição do Service para o Confluent Control Center
apiVersion: v1
kind: Service
metadata:
  name: control-center  # Nome do Service
spec:
  selector:
    app: control-center  # Seleciona pods com a label 'app: control-center'
  type: LoadBalancer  # Tipo do Service (LoadBalancer para exposição externa)
  ports:
    - port: 80  # Porta do Service
      targetPort: 9021  # Porta dos pods de destino

    # nodePort: 30002
